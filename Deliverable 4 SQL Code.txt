-- WalkWithMe Database

-- Drop the tables 
drop table users cascade constraints;
drop table walker cascade constraints;
drop table address cascade constraints;
drop table request_status cascade constraints;
drop table ratings cascade constraints;
drop table request cascade constraints;

ï»¿-- Create the Users table:
CREATE TABLE Users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(150),
    email VARCHAR(150),
    phone VARCHAR(15),
    password_hash VARCHAR(225),
    rating DECIMAL(2,1) DEFAULT 0
);


-- Create the Walker table:
CREATE TABLE Walker (
    walker_id INT PRIMARY KEY,
    walker_name VARCHAR(150),
    email VARCHAR(150),
    phone VARCHAR(15),
    password_hash VARCHAR(225),
    rating DECIMAL(2,1) DEFAULT 0
);


-- Create the Address table:
CREATE TABLE Address (
    address_id INT PRIMARY KEY,
    street VARCHAR(150),
    city VARCHAR(150),
    address_state VARCHAR(50),
    postal_code VARCHAR(15),
    country VARCHAR(50)
);


-- Create the Request_Status table:
CREATE TABLE Request_Status (
    status_id INT PRIMARY KEY,
    status_name VARCHAR(150)
);


-- Create the Ratings table:
CREATE TABLE Ratings (
    rating_id INT PRIMARY KEY,
    rating_value DECIMAL(2,1),
    rating_date DATE,
    user_id INT,
    walker_id INT,
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (walker_id) REFERENCES Walker(walker_id)
);


-- Create the Request table:
CREATE TABLE Request (
    request_id INT PRIMARY KEY,
    user_id INT,
    walker_id INT,
    status_id INT,
    pickup_location VARCHAR(150),
    destination_location VARCHAR(150),
    request_time TIMESTAMP,
    walk_start_time TIMESTAMP,
    walk_end_time TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (walker_id) REFERENCES Walker(walker_id),
    FOREIGN KEY (status_id) REFERENCES Request_Status(status_id)
);


-- Insert statements:
INSERT INTO Users VALUES (1, 'Alice Johnson', 'alice@example.com', '111-222-1234', 'hashed_password_1', 1.5);
INSERT INTO Users VALUES (2, 'Bill Myers', 'bill@example.com', '333-555-1234', 'hashed_password_2', 4.5);
INSERT INTO Users VALUES (3, 'Peter Griffin', 'peter@example.com', '777-888-1234', 'hashed_password_3', 7.5);


INSERT INTO Walker VALUES (1, 'Paul George', 'paul@example.com', '333-444-1234', 'hashed_password_2', 6.5);
INSERT INTO Walker VALUES (2, 'Joel Embiid', 'joel@example.com', '888-777-1234', 'hashed_password_4', 5.5);
INSERT INTO Walker VALUES (3, 'Tyrese Maxey', 'tyrese@example.com', '222-555-1234', 'hashed_password_6', 8.6);


INSERT INTO Address VALUES (1, 'Sunset Drive', 'Jump City', 'California', '12415', 'United States');
INSERT INTO Address VALUES (2, 'Ocean Drive', 'Atlanta', 'Georgia', '21375', 'United States');
INSERT INTO Address VALUES (3, 'Belair Road', 'Baltimore', 'Maryland', '21242', 'United States');


INSERT INTO Request_Status VALUES (1, 'Pending');
INSERT INTO Request_Status VALUES (2, 'In Progress');
INSERT INTO Request_Status VALUES (3, 'Completed');
INSERT INTO Request_Status VALUES (4, 'Cancelled');


INSERT INTO Request VALUES (1, 1, 1, 1, '123 Main St', '456 Elm St', 
    TO_TIMESTAMP('2024-11-15 14:30:00', 'YYYY-MM-DD HH24:MI:SS'), NULL, NULL);
INSERT INTO Request VALUES (2, 2, 2, 2, '456 Elm St', '789 Oak St', 
    TO_TIMESTAMP('2024-11-16 15:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2024-11-16 15:30:00', 'YYYY-MM-DD HH24:MI:SS'), NULL);
INSERT INTO Request VALUES (3, 3, 3, 3, '789 Oak St', '123 Main St', 
    TO_TIMESTAMP('2024-11-17 16:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2024-11-17 16:30:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2024-11-17 17:00:00', 'YYYY-MM-DD HH24:MI:SS'));


INSERT INTO Ratings VALUES (1, 5.0, TO_DATE('2024-11-15', 'YYYY-MM-DD'), 1, 1);
INSERT INTO Ratings VALUES (2, 4.0, TO_DATE('2024-11-16', 'YYYY-MM-DD'), 2, 2);
INSERT INTO Ratings VALUES (3, 3.0, TO_DATE('2024-11-17', 'YYYY-MM-DD'), 3, 3);


select * from users;
select * from address;
select * from walker;
select * from request_status;
select * from ratings;
select * from request;



